Queuable Apex: 

Note: Compare Queuable Apex with Future jobs

   1.If we want to run Apex class Asynchornously,Then we use the concept of the Queueable apex.
   
   2.These are used to run the long running operations like external webservice call, Bulk Database operations asychronously.
	   
   3.If you want to run apex class as Quaueable apex then ,Apex class has to implement queuable interface.
	   
   4.Any Apex class which implements Queueable  interface has to define execute  method and Business Logic which we want to run  asynchronous is defined
   within the execute method..
	   
 Syntax : 
     public void execute(QueueableContext qc){
     
     }
	
   5.When we invoke the queueable job using System.enqueueJob() method ,This will return Id of the asynchronous job .Using which we can track the status of the job.
	   
Note :Future method will not return the Id of the Job ,when we invoke it.
	   
   6.Using non-primitive types: Your queueable class can contain member variables of non-primitive data types, such as sObjects or custom Apex types. 
	  
Note : Future method will not accept non-primitive dataTypes as parameters.
	  
   7.Chaining jobs: We can invoke queable Apex from Other queable Apex .
		  : We can order the execution by invoking Queueable2 from queueable 1
Example:
	Lets say I have two Queuable Apex job. Now I want to call 2 Queuable job as soon as I complete Queuable Job 1.
	It is not possible to call Queuable job 2 and Queuable Job 3 in Queuable job 1
Note : Future method cannot be called from another future method.


