Use Case 1: Write a SOQL query and get all Account records whose NoOfEmployees greater than 1000 and convert the list into Map and get AccountName as Key and NoOfEmployees as Value and store it in Map?
----------
list<Account> listAcc = [SELECT Id,Name,Rating,NumberOfEmployees,Phone FROM Account WHERE NumberOfEmployees >1000];
Map<String,Integer> accMap = new Map<String,Integer>();
for( Account acc : listAcc){
    accMap.put(acc.Name, acc.NumberOfEmployees);
}
system.debug('The elements in the Map are :'+ accMap);

//Output: The elements in the Map are :{Burlington Textiles Corp of America=9000, Express Logistics and Transport=12300, Grand Hotels & Resorts Ltd=5600, TCS Company=50000, United Oil & Gas Corp.=145000, United Oil & Gas, Singapore=3000, United Oil & Gas, UK=24000, University of Arizona=39000}

Use Case 2: Write a SOQL query and get all the Account records whose NoOfEmployees greater that 1000 and convert the list into Set and get Account ID and store it in Set?
----------
list<Account> listAcc = [SELECT Id,Name,Rating,NumberOfEmployees,Phone FROM Account WHERE NumberOfEmployees >1000];
Set<ID> accSet = new Set<id>();
for( Account acc : listAcc){
    accSet.Add(acc.id);
}
system.debug('The elements in the Set are :'+ accSet);

//Output: The elements in the Set are :{0015i00000Lf23gAAB, 0015i00000Lf23jAAB, 0015i00000Lf23kAAB, 0015i00000Lf23lAAB, 0015i00000Lf23mAAB, 0015i00000Lf23nAAB, 0015i00000Lf23oAAB, 0015i00000OENimAAH}

Use Case 3: Write a SOQL query and get all Account records whose Rating ='Hot' and convert the list into Map and get AccountID as Key and Rating as Value and store it in Map?
----------
list<Account> listAcc = [SELECT Id,Name,Rating,NumberOfEmployees,Phone FROM Account WHERE Rating = 'Hot'];
Map<ID,String> accMap = new Map<ID,String>();
for( Account acc : listAcc){
    accMap.put(acc.ID, acc.Rating);
}
system.debug('The elements in the Map are :'+ accMap);

//Output: The elements in the Map are :{0015i00000P6P9SAAV=Hot, 0015i00000P6js1AAB=Hot, 0015i00000P6js2AAB=Hot, 0015i00000P6js3AAB=Hot, 0015i00000P6js4AAB=Hot, 0015i00000P6js5AAB=Hot, 0015i00000P6js6AAB=Hot, 0015i00000Q1DdIAAV=Hot, 0015i00000Q1DdwAAF=Hot}

                                                                      Child to Parent SOQL Query
                                                                      ------------***-----------
Account and Contact object (Lookup relation with Cascading delete): Which mean we can create Contact without Account because in the background if we delete Account then
associated child records will be deleted.

SELECT Id,Name, AccountId, Account.Name, Account.Rating, Email FROM Contact

SELECT id, CaseNumber, Status, ContactId, Contact.Name, Contact.LastName, Origin FROM Case

Note: When you want to query parent object fields from the child object query, directly called Parentobject.fieldName
-----

Case to Contact to Account
-------------------------
SELECT id, CaseNumber, Status, ContactId, Contact.Name, Contact.LastName, Contact.AccountId, Contact.Account.Name, Origin FROM Case

Case to Contact to Account to Owner
-----------------------------------
SELECT id, CaseNumber, Status, ContactId, Contact.Name, Contact.LastName, Contact.AccountId, Contact.Account.Name, Contact.Account.Owner.Name, Origin FROM Case

Note: Upto 5 levels we can query the records
----

Patient to Doctor Relationship Query
------------------------------------
SELECT Doctor_Allocated_Lookup__c,Id,Doctor_Allocated_Lookup__r.Name,Doctor_Allocated_Master_Detail__r.Name, Name FROM Patient__c

Patient to Doctor to Owner Relationship Query
--------------------------------------------
SELECT Doctor_Allocated_Lookup__c,Id,Doctor_Allocated_Lookup__r.Name,Doctor_Allocated_Master_Detail__r.Name, Name, Doctor_Allocated_Lookup__r.Owner.Name FROM Patient__c

Example: SOQL Query to get all the Student and Trainer details whose Lookup date is not NUll
-------
SELECT Email_Id__c,Fee_Paid__c,Id,Name,State__c,Trainer_Allocated_Lookup__c,Trainer_Allocated_Lookup__r.Name FROM Student__c WHERE Trainer_Allocated_Lookup__r.Trainer_Salary__c != Null

Example: SOQL Query to get all the Student and Trainer details whose Lookup date is not NUll and Specialization = ABS GBS 
-------
SELECT Doctor_Allocated_Lookup__c,Doctor_Allocated_Master_Detail__c,Doctor_Allocated__c,Id,Name FROM Patient__c WHERE Doctor_Allocated_Master_Detail__r.Specialization__c INCLUDES ('ABS','GBS')

Assignment: 
-----------
1.Write a SOQL query between Opportunity and Account, OpportunityLineItem and Opportunity, QuoteLineIteam and Quote, Student and Staff?
2.For suppose I have a SOQL query: Select id,Name,AccountId from Contact, Now I want to convert this list into Map and store accId as key and List<Contact> as value and
store it in a Map
Tip: Use For loop and if loop

                                                                       Parent to Child SOQL Query
                                                                      ------------***-----------
Parent to Child : Account to Contact
------------------------------------
Example 1: Standard object
---------
SELECT id,Name, (Select id, Name from contacts) from Account

Assignment:
----------
For suppose I have a SOQL query: SELECT id,Name, (Select id, Name from contacts) from Account, Now I want to convert this list into Map and store accId as key and List<Contacts> as value and store it in a Map

List<Account> lstAccs = [SELECT id,Name, (Select id, Name from contacts) from Account];
Map<id,List<Contact>> mapAccCons = new Map<id,List<Contact>>(); 
for(Account acc : lstAccs){
 if(acc.contacts.size()>0){
  //system.debug('The Account ids are ::' + acc.id);
  //system.debug('The contact details are ::' + acc.contacts);
  mapAccCons.put(acc.Id, acc.contacts); 
}
}
system.debug('Map details are ::' + mapAccCons);

Example 2: Custom object
---------
SELECT id,Name, (Select id, Name from Students__r) from Trainer__c

Assignment:
----------
For suppose I have a SOQL query: SELECT id,Name, (Select id, Name from Students__r) from Trainer__c, Now I want to convert this list into Map and store TrainerID as key and List<Student Name> as value and store it in a Map


Usage of All Rows in SOQL: 
-------------------------
It is used to get all the records including deleted records from the recycle bin
ALL ROWS will not be supported in workbench and in developer console but I can be used only in Apex class

List<lead> leads = [select id,Name from Lead ALL ROWS];
        for(lead l : leads){
            system.debug('The leads are :' + l.Name);
        }
Note: In the above case we are getting all the lead records including deleted records.
----- 
I want to get only deleted record from the above logic

List<lead> leads = [select id,Name from Lead WHERE isdeleted = true ALL ROWS];
        for(lead l : leads){
            system.debug('The leads are :' + l.Name);
        }
FOR UPDATE: At time during deployments we will facing an issue called "unable to lock ROW" (Whe group fo users update the same record).
