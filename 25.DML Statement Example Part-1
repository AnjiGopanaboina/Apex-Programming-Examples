Data Manupulation Language (DML)
--------------------------------
DML statements are used to manupulate the data existing in the database and also create new records

Different types of DML operation
	1.Insert : create new records
	2.Update : Modify the existing data
	3.Delete : Remove the existing the data from Salesforce object
	4.undelete : Get record from the recycle bin and inset back into the respective object.
	5.upsert (Update+insert) : If records are available then update if not create new records.
        6.Merge: Lets say we have a parent record and child record and assumme that child record is duplicate and then you want merge parent and child then we use Merge.
	
How to create a DML operation in salesforce?
--------------------------------------------
	Through Anonymous window, In Business class and Test classes too

Insert Operation : Create new records:
--------------------------------------
Example 1:
---------
Account acc = new Account(Name='Account1');
insert acc;
system.debug('The Account inserted is :'+acc);
//Output:The Account inserted is :Account:{Name=Account1, Id=0015i00000Qi6QWAAZ}

Example 2:
---------
Account acc = new Account(Name='Account2',phone='09893832', rating='Hot');
insert acc;
system.debug('The Account inserted is :'+acc);
//Output: The Account inserted is :Account:{Name=Account2, Phone=09893832, Rating=Hot, Id=0015i00000Qi6QqAAJ}

Note: While creating any record it is always important to include data for mandatory fields for that respective object
-----
Note: In a single transcation we can perform maximum of 150DML operations and for each DML operation we can perform 10k records creation.
-----

Example2: DML Error: System.LimitException: Too many DML statements: 151
--------
for(Integer i=1;i<=200;i++){
    Account acc = new Account();
    acc.Name = 'Exp'+i;
    acc.phone = '98374383';
    acc.rating= 'Hot';
    insert acc;
}
Output:System.LimitException: Too many DML statements: 151
------
To eliminate the above DML operation we need to use list and add the elements to the list and then print Insert operation outside of for loop.

Example3:
--------
List<Account> accList = new List<Account>();
for(Integer i=1;i<=200;i++){
    Account acc = new Account();
    acc.Name = 'Exp'+i;
    acc.phone = '98374383';
    acc.rating= 'Hot';
    accList.add(acc);
}
insert accList;

Update: Modify the existing records:
------
Example 1: 
---------
Account myaccount = [select id,Name,billingCity from Account where Name='Account1' LIMIT 1];
myaccount.billingCity='sydney';
update myaccount;
//Output:The Updated Account details are:Account:{Id=0015i00000Qi6QMAAZ, Name=Account1, BillingCity=sydney}

If you know the Id of the record then we can use following code below.

Example2:
--------
Account myaccount = [select id,Name,billingCity from Account where Name='Account1' LIMIT 1];
myaccount.id='0015i00000Qi6QMAAZ';
myaccount.rating='Hot';
update myaccount;
system.debug('The Updated Account details are:'+ myaccount);
//Output: The Updated Account details are:Account:{Id=0015i00000Qi6QMAAZ, Name=Account1, BillingCity=sydney, Rating=Hot}

Note:Ideally the above approach is not a best approach to follow

Example 3: Update all Account records whose Account Name starts with Exp with Rating from Hot to Cold
---------
List<Account> lstAcc = [select id,Name,Rating FROM Account WHERE Name like 'Exp%'];
system.debug('The Number of Accounts:' + lstAcc.size());
for(Account acc : lstAcc){
  acc.Rating = 'Cold';
}
update lstAcc;
Note: If we write DML operation inside the for each loop then it will throw 150 DML error.
----

Upsert: Insert + Update
------
Account[] myaccount = [select id,Name,billingCity from Account where Name='Account1'];
for(Account acc : myaccount){
    acc.billingcity='austin';
}
Account newAcc = new Account(Name='Account2',billingcity='meblourne');
myaccount.add(newAcc);
upsert myaccount;


6.Delete: Remove the existing records from the respective S-object
--------

Example 1:
---------
List<Account> myaccount = [select id,Name,billingCity from Account where Name like 'Exp%' LIMIT 200];
delete myaccount;

Example 2:
----------
DELETE[select id,Name from Account where Name like 'Account%' LIMIT 10];

Undelete:
--------
Account myaccount = [select id,Name,billingCity from Account where Name='Account1' ALL ROWS];
undelete myaccount;

Merge: Lets say you have two record on the same object with has common data and you want to combine them into one then use Merge statement
-----

Example 1:
----------
//Insert 1st record
Account acc1 = new Account();
acc1.name = 'Test Anji';
acc1.phone ='1234321';
insert acc1;

//Insert 2nd record
Account acc2 = new Account();
acc2.name = 'Test';
acc2.phone ='1234321';
insert acc2;

//Query the records and then merge the records
Account masterAccount = [select id, name from Account where Name ='Test Anji' LIMIT 1];
Account mergeAccount = [select id, name from Account where Name ='Test' LIMIT 1];
merge masterAccount mergeAccount;

Note:
----
1.In a single trascation how many DML statements can we perform: 150
2.In a single transcation how many DML rows can we Insert : 10,000
3.How many SOQL quiries we can perform in single transcation : 100
4.Each SOQL query we can retrive maximum of how many records: 50K
5.What is the maximum CPU time limit : 10 sec
