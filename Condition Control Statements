Control Statements
        Generally the execution of the program will take place from top to bottom but this might not be desired flow of execution as some statements might execute
repeatedly or some statements might be skipped based on a condition. This is flow of execution is done through control statements.

There are 3 different types of Control statements 

i.Simple condition control statement: These statements either execute once or skip the execution of the program based on the condition 
	        Ex: if, if else, series of if, Nested if ...Etc.,
          
ii.Iterative condition control statement: These statements either execute several times or skip the execution of the program based on a condition 
	        Ex: While loop, do while loop, for loop, for each loop... Etc.,
          
iii.Jump Condition Control Statements: This statement has nothing to do with the condition. But this statement will jump from one part of the program to another
    part of the program.
	        Ex: Break, goto, Function call, Return Statements.
                                                          
                                                              
                                                              Simple Condition Control Statements
If Statement:
      Syntax:
            if(condition){
                //statements to be executed
            }

Example1:
Integer age =18;
if(age>=18){
    system.debug('You are eligible to vote');
}
//Output:You are eligible to vote

Example 2:
Integer marks =55;
if(marks>=35){
    system.debug('You passed the exam');
}
//Output:You passed the exam


if-else condition
Syntax:
------
if(condition){
//statments to be executed    
}
else{

}

Example 1:
---------
Integer Age = 20;
if(age<=18){   // if condition ==> true
    System.Debug('You are eligible to vote');
}
else {
    System.Debug('You are not eligible to vote');
}
//Output: You are not eligible to vote

Example 2:
---------
Integer marks=25;
if(marks>=35){
    system.debug('You passed the exam');
}
else{
    system.debug('You are not qualified for the exam');
}
//Output: You are not qualified for the exam
                                                                                  if-else-if condition
                                                                                  ---------------------
Syntax:
-------
if(condition){
    
}
else
    if(condition){
        
    }
else
    if(condition){
        
    }
else{
    
}

Example 1:
---------
integer a =10;
integer b =20;
integer c =30;
integer d =40;
if (a>b && a>c && a>d){
    system.debug('A is Big');    
}
else
    if(b>c && b>d){
        system.debug('B is big');				
    }
else
    if(c>d){
        system.debug('C is big');
    }
else{
    system.debug('D is big');
}
//Output: D is big

Example 2:
---------
integer marks = 25;
    if(marks >=35 && marks <=75){
        system.debug('You are under C grade');
    }
else
    if(marks >=75 && marks <=95){
        system.debug('You are under B grade');
    }
else
    if(marks >=95 && marks <=100){
        system.debug('You are under A grade');
    }
else{
    system.debug('You failed the exam');
}

                                                                                Nested if
                                                                                ---------
one IF function inside of another if is known as Nested If

Syntax:
-------
if(condition){
    if(condition){
        statement to be executed;
    }
    else{
        
    }
}
